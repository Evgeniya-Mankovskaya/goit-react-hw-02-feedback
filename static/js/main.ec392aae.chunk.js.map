{"version":3,"sources":["components/FeedbackOptions/Feedback.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Feedback","option","onFeedback","className","s","buttonItem","onClick","FeedbackOptions","options","buttonList","map","uuidv4","Section","title","children","Statistics","good","neutral","bad","total","positiveFeedback","statisticsList","Notification","message","App","state","stateFeedback","e","setState","prevState","countTotalFeedback","this","countPositiveFeedbackPercentage","Math","floor","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAiBeA,EAbE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC1B,OACE,6BACE,wBAAQC,UAAWC,IAAEC,WAAYC,QAAS,kBAAMJ,EAAWD,IAA3D,SACGA,O,QCaMM,EAfS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASN,EAAiB,EAAjBA,WAClC,OACE,oBAAIC,UAAWC,IAAEK,WAAjB,SACGD,EAAQE,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAAyBA,OAAQA,EAAQC,WAAYA,GAAtCS,qBCKRC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCgBQC,EAlBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,qBAAIjB,UAAWC,IAAEiB,eAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCFSE,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCERC,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPQ,cAAgB,SAACC,GACf,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAIE,EAAUF,GAAK,O,EAGxBG,mBAAqB,WACnB,OAAOC,KAAKN,MAAMT,KAAOe,KAAKN,MAAMR,QAAUc,KAAKN,MAAMP,K,EAE3Dc,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlBH,KAAKN,MAAMT,KAAce,KAAKD,uB,4CAGnD,WACE,IAAIX,EAAQY,KAAKD,qBACjB,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,0BACf,cAAC,EAAD,CACEL,QAAS,CAAC,OAAQ,UAAW,OAC7BN,WAAY6B,KAAKL,gBAEnB,cAAC,EAAD,CAASb,MAAM,eACJ,IAAVM,EACC,cAAC,EAAD,CAAcI,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMe,KAAKN,MAAMT,KACjBC,QAASc,KAAKN,MAAMR,QACpBC,IAAKa,KAAKN,MAAMP,IAChBC,MAAOY,KAAKD,qBACZV,iBAAkBW,KAAKC,2C,GApCjBG,aA2CHX,IC5CfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,sC,kBCAhFD,EAAOC,QAAU,CAAC,eAAiB,sC","file":"static/js/main.ec392aae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst Feedback = ({ option, onFeedback }) => {\r\n  return (\r\n    <li>\r\n      <button className={s.buttonItem} onClick={() => onFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nFeedback.propTypes = {\r\n  option: PropTypes.string,\r\n  onFeedback: PropTypes.func,\r\n};\r\nexport default Feedback;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Feedback from \"./Feedback\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onFeedback }) => {\r\n  return (\r\n    <ul className={s.buttonList}>\r\n      {options.map((option) => (\r\n        <Feedback key={uuidv4()} option={option} onFeedback={onFeedback} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n  return (\r\n    <ul className={s.statisticsList}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positiveFeedback}%</li>\r\n    </ul>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  stateFeedback = (e) => {\n    this.setState((prevState) => ({\n      [e]: prevState[e] + 1,\n    }));\n  };\n  countTotalFeedback = function () {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = function () {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    let total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\" />\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onFeedback={this.stateFeedback}\n        />\n        <Section title=\"Statistics\" />\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positiveFeedback={this.countPositiveFeedbackPercentage()}\n          />\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__84irr\",\"buttonItem\":\"FeedbackOptions_buttonItem__5ebyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2bjqb\"};"],"sourceRoot":""}